<?php
/**
 * 
 * Adds edit links to Page fields which use AsmSelect, Select, PageListSelect, PageListSelectMultiple, or PageAutoComplete
 *
 * authors: thetuningspoon, macrura
 */
 
class AdminPageFieldEditLinks extends WireData implements Module {

	public static function getModuleInfo() {

		return array(
			'title' => 'Page Field Edit Links', 
			'version' => '2.0.1', 
			'summary' => 'Creates edit links on Page fields. Compatible with Select, AsmSelect, PageListSelect, PageListSelectMultiple, and PageAutoComplete',
			'href' => 'http://processwire.com',
			'singular' => true, 
			'autoload' => 'template=admin', 
			'icon' => 'edit', 	
			'requires' => array('InputfieldPage', 'InputfieldAsmSelect')
			);
	}

	/**
	 * Initialize the module
	 *
	 * ProcessWire calls this when the module is loaded. For 'autoload' modules, this will be called
	 * when ProcessWire's API is ready. As a result, this is a good place to attach hooks. 
	 *
	 */
	public function init() {
		
		$this->addHookProperty("InputfieldPage::editable", $this, "hookAddEditableProperty");
		$this->addHookBefore("InputfieldAsmSelect::render", $this, "hookAsmSetup");
		$this->addHookAfter("InputfieldPage::getConfigInputfields", $this, "hookAddConfigOption");
		$this->addHookBefore('InputfieldPage::render', $this, 'hookLoadAssets');
	}
	
	public function hookAddEditableProperty(HookEvent $event) {
	     $event->return = 0;
	}

	// attach js+css to the page only on edit page
	public function hookLoadAssets(HookEvent $event) {
		
		if($event->object->editable && $this->process == 'ProcessPageEdit') {
			$this->modules->get('JqueryUI')->use('modal');

			// load module scripts and styles for the list links
			$this->config->scripts->add($this->config->urls->AdminPageFieldEditLinks . "AdminPageFieldEditLinks.js");
			$this->config->styles->add($this->config->urls->AdminPageFieldEditLinks . "AdminPageFieldEditLinks.css");
			
			// Add a CSS class (InputfieldPage-editable) so we can hook it with javascript
			$event->object->addClass('InputfieldPage-editable');
		}
		
	}
	
	public function hookAddConfigOption(HookEvent $event) {
		if($event->object->hasFieldtype !== false) { 
			$field = $this->modules->get('InputfieldCheckbox');
			$field->attr('name', 'editable'); 
			$field->attr('value', 1); 
			$field->label = $this->_('Use page edit link(s)?');
			$field->description = $this->_('If checked, pages selected with this field may be edited in a modal window.');
			
			if($event->object->editable) $field->attr('checked', 'checked'); 

			$event->return->append($field);
		}
	}
	
	public function hookAsmSetup(HookEvent $event) {
	 	if($event->object->editable && $this->process == 'ProcessPageEdit') {
	 		$field = $event->object;
	 		// make selected options editable via modal
	 		$field->setAsmSelectOption('editLink', $this->config->urls->admin . 'page/edit/?id={value}&modal=1');
	 	}

	}
		
}
